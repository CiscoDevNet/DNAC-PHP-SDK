<?php
/**
 * SiteHierarchyResponseResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cisco\com\dnac\v1\api\client\model;

use \ArrayAccess;
use \cisco\com\dnac\v1\api\client\ObjectSerializer;

/**
 * SiteHierarchyResponseResponse Class Doc Comment
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class SiteHierarchyResponseResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'SiteHierarchyResponse_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'site_name' => 'string',
        'site_id' => 'string',
        'parent_site_id' => 'string',
        'parent_site_name' => 'string',
        'site_type' => 'string',
        'healthy_network_device_percentage' => 'string',
        'healthy_clients_percentage' => 'string',
        'client_health_wired' => 'string',
        'client_health_wireless' => 'string',
        'number_of_clients' => 'string',
        'client_number_of_issues' => 'string',
        'network_number_of_issues' => 'string',
        'number_of_network_device' => 'string',
        'network_health_average' => 'string',
        'network_health_access' => 'string',
        'network_health_core' => 'string',
        'network_health_distribution' => 'string',
        'network_health_router' => 'string',
        'network_health_wireless' => 'string',
        'network_health_others' => 'string',
        'number_of_wired_clients' => 'string',
        'number_of_wireless_clients' => 'string',
        'wired_good_clients' => 'string',
        'wireless_good_clients' => 'string',
        'client_issue_count' => 'string',
        'overall_good_devices' => 'string',
        'access_good_count' => 'string',
        'access_total_count' => 'string',
        'core_good_count' => 'string',
        'core_total_count' => 'string',
        'distribution_good_count' => 'string',
        'distribution_total_count' => 'string',
        'router_good_count' => 'string',
        'router_total_count' => 'string',
        'wireless_device_good_count' => 'string',
        'wireless_device_total_count' => 'string',
        'application_health' => 'string',
        'application_good_count' => 'string',
        'application_total_count' => 'string',
        'application_bytes_total_count' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'site_name' => null,
        'site_id' => null,
        'parent_site_id' => null,
        'parent_site_name' => null,
        'site_type' => null,
        'healthy_network_device_percentage' => null,
        'healthy_clients_percentage' => null,
        'client_health_wired' => null,
        'client_health_wireless' => null,
        'number_of_clients' => null,
        'client_number_of_issues' => null,
        'network_number_of_issues' => null,
        'number_of_network_device' => null,
        'network_health_average' => null,
        'network_health_access' => null,
        'network_health_core' => null,
        'network_health_distribution' => null,
        'network_health_router' => null,
        'network_health_wireless' => null,
        'network_health_others' => null,
        'number_of_wired_clients' => null,
        'number_of_wireless_clients' => null,
        'wired_good_clients' => null,
        'wireless_good_clients' => null,
        'client_issue_count' => null,
        'overall_good_devices' => null,
        'access_good_count' => null,
        'access_total_count' => null,
        'core_good_count' => null,
        'core_total_count' => null,
        'distribution_good_count' => null,
        'distribution_total_count' => null,
        'router_good_count' => null,
        'router_total_count' => null,
        'wireless_device_good_count' => null,
        'wireless_device_total_count' => null,
        'application_health' => null,
        'application_good_count' => null,
        'application_total_count' => null,
        'application_bytes_total_count' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'site_name' => 'siteName',
        'site_id' => 'siteId',
        'parent_site_id' => 'parentSiteId',
        'parent_site_name' => 'parentSiteName',
        'site_type' => 'siteType',
        'healthy_network_device_percentage' => 'healthyNetworkDevicePercentage',
        'healthy_clients_percentage' => 'healthyClientsPercentage',
        'client_health_wired' => 'clientHealthWired',
        'client_health_wireless' => 'clientHealthWireless',
        'number_of_clients' => 'numberOfClients',
        'client_number_of_issues' => 'clientNumberOfIssues',
        'network_number_of_issues' => 'networkNumberOfIssues',
        'number_of_network_device' => 'numberOfNetworkDevice',
        'network_health_average' => 'networkHealthAverage',
        'network_health_access' => 'networkHealthAccess',
        'network_health_core' => 'networkHealthCore',
        'network_health_distribution' => 'networkHealthDistribution',
        'network_health_router' => 'networkHealthRouter',
        'network_health_wireless' => 'networkHealthWireless',
        'network_health_others' => 'networkHealthOthers',
        'number_of_wired_clients' => 'numberOfWiredClients',
        'number_of_wireless_clients' => 'numberOfWirelessClients',
        'wired_good_clients' => 'wiredGoodClients',
        'wireless_good_clients' => 'wirelessGoodClients',
        'client_issue_count' => 'clientIssueCount',
        'overall_good_devices' => 'overallGoodDevices',
        'access_good_count' => 'accessGoodCount',
        'access_total_count' => 'accessTotalCount',
        'core_good_count' => 'coreGoodCount',
        'core_total_count' => 'coreTotalCount',
        'distribution_good_count' => 'distributionGoodCount',
        'distribution_total_count' => 'distributionTotalCount',
        'router_good_count' => 'routerGoodCount',
        'router_total_count' => 'routerTotalCount',
        'wireless_device_good_count' => 'wirelessDeviceGoodCount',
        'wireless_device_total_count' => 'wirelessDeviceTotalCount',
        'application_health' => 'applicationHealth',
        'application_good_count' => 'applicationGoodCount',
        'application_total_count' => 'applicationTotalCount',
        'application_bytes_total_count' => 'applicationBytesTotalCount'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'site_name' => 'setSiteName',
        'site_id' => 'setSiteId',
        'parent_site_id' => 'setParentSiteId',
        'parent_site_name' => 'setParentSiteName',
        'site_type' => 'setSiteType',
        'healthy_network_device_percentage' => 'setHealthyNetworkDevicePercentage',
        'healthy_clients_percentage' => 'setHealthyClientsPercentage',
        'client_health_wired' => 'setClientHealthWired',
        'client_health_wireless' => 'setClientHealthWireless',
        'number_of_clients' => 'setNumberOfClients',
        'client_number_of_issues' => 'setClientNumberOfIssues',
        'network_number_of_issues' => 'setNetworkNumberOfIssues',
        'number_of_network_device' => 'setNumberOfNetworkDevice',
        'network_health_average' => 'setNetworkHealthAverage',
        'network_health_access' => 'setNetworkHealthAccess',
        'network_health_core' => 'setNetworkHealthCore',
        'network_health_distribution' => 'setNetworkHealthDistribution',
        'network_health_router' => 'setNetworkHealthRouter',
        'network_health_wireless' => 'setNetworkHealthWireless',
        'network_health_others' => 'setNetworkHealthOthers',
        'number_of_wired_clients' => 'setNumberOfWiredClients',
        'number_of_wireless_clients' => 'setNumberOfWirelessClients',
        'wired_good_clients' => 'setWiredGoodClients',
        'wireless_good_clients' => 'setWirelessGoodClients',
        'client_issue_count' => 'setClientIssueCount',
        'overall_good_devices' => 'setOverallGoodDevices',
        'access_good_count' => 'setAccessGoodCount',
        'access_total_count' => 'setAccessTotalCount',
        'core_good_count' => 'setCoreGoodCount',
        'core_total_count' => 'setCoreTotalCount',
        'distribution_good_count' => 'setDistributionGoodCount',
        'distribution_total_count' => 'setDistributionTotalCount',
        'router_good_count' => 'setRouterGoodCount',
        'router_total_count' => 'setRouterTotalCount',
        'wireless_device_good_count' => 'setWirelessDeviceGoodCount',
        'wireless_device_total_count' => 'setWirelessDeviceTotalCount',
        'application_health' => 'setApplicationHealth',
        'application_good_count' => 'setApplicationGoodCount',
        'application_total_count' => 'setApplicationTotalCount',
        'application_bytes_total_count' => 'setApplicationBytesTotalCount'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'site_name' => 'getSiteName',
        'site_id' => 'getSiteId',
        'parent_site_id' => 'getParentSiteId',
        'parent_site_name' => 'getParentSiteName',
        'site_type' => 'getSiteType',
        'healthy_network_device_percentage' => 'getHealthyNetworkDevicePercentage',
        'healthy_clients_percentage' => 'getHealthyClientsPercentage',
        'client_health_wired' => 'getClientHealthWired',
        'client_health_wireless' => 'getClientHealthWireless',
        'number_of_clients' => 'getNumberOfClients',
        'client_number_of_issues' => 'getClientNumberOfIssues',
        'network_number_of_issues' => 'getNetworkNumberOfIssues',
        'number_of_network_device' => 'getNumberOfNetworkDevice',
        'network_health_average' => 'getNetworkHealthAverage',
        'network_health_access' => 'getNetworkHealthAccess',
        'network_health_core' => 'getNetworkHealthCore',
        'network_health_distribution' => 'getNetworkHealthDistribution',
        'network_health_router' => 'getNetworkHealthRouter',
        'network_health_wireless' => 'getNetworkHealthWireless',
        'network_health_others' => 'getNetworkHealthOthers',
        'number_of_wired_clients' => 'getNumberOfWiredClients',
        'number_of_wireless_clients' => 'getNumberOfWirelessClients',
        'wired_good_clients' => 'getWiredGoodClients',
        'wireless_good_clients' => 'getWirelessGoodClients',
        'client_issue_count' => 'getClientIssueCount',
        'overall_good_devices' => 'getOverallGoodDevices',
        'access_good_count' => 'getAccessGoodCount',
        'access_total_count' => 'getAccessTotalCount',
        'core_good_count' => 'getCoreGoodCount',
        'core_total_count' => 'getCoreTotalCount',
        'distribution_good_count' => 'getDistributionGoodCount',
        'distribution_total_count' => 'getDistributionTotalCount',
        'router_good_count' => 'getRouterGoodCount',
        'router_total_count' => 'getRouterTotalCount',
        'wireless_device_good_count' => 'getWirelessDeviceGoodCount',
        'wireless_device_total_count' => 'getWirelessDeviceTotalCount',
        'application_health' => 'getApplicationHealth',
        'application_good_count' => 'getApplicationGoodCount',
        'application_total_count' => 'getApplicationTotalCount',
        'application_bytes_total_count' => 'getApplicationBytesTotalCount'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['site_name'] = isset($data['site_name']) ? $data['site_name'] : null;
        $this->container['site_id'] = isset($data['site_id']) ? $data['site_id'] : null;
        $this->container['parent_site_id'] = isset($data['parent_site_id']) ? $data['parent_site_id'] : null;
        $this->container['parent_site_name'] = isset($data['parent_site_name']) ? $data['parent_site_name'] : null;
        $this->container['site_type'] = isset($data['site_type']) ? $data['site_type'] : null;
        $this->container['healthy_network_device_percentage'] = isset($data['healthy_network_device_percentage']) ? $data['healthy_network_device_percentage'] : null;
        $this->container['healthy_clients_percentage'] = isset($data['healthy_clients_percentage']) ? $data['healthy_clients_percentage'] : null;
        $this->container['client_health_wired'] = isset($data['client_health_wired']) ? $data['client_health_wired'] : null;
        $this->container['client_health_wireless'] = isset($data['client_health_wireless']) ? $data['client_health_wireless'] : null;
        $this->container['number_of_clients'] = isset($data['number_of_clients']) ? $data['number_of_clients'] : null;
        $this->container['client_number_of_issues'] = isset($data['client_number_of_issues']) ? $data['client_number_of_issues'] : null;
        $this->container['network_number_of_issues'] = isset($data['network_number_of_issues']) ? $data['network_number_of_issues'] : null;
        $this->container['number_of_network_device'] = isset($data['number_of_network_device']) ? $data['number_of_network_device'] : null;
        $this->container['network_health_average'] = isset($data['network_health_average']) ? $data['network_health_average'] : null;
        $this->container['network_health_access'] = isset($data['network_health_access']) ? $data['network_health_access'] : null;
        $this->container['network_health_core'] = isset($data['network_health_core']) ? $data['network_health_core'] : null;
        $this->container['network_health_distribution'] = isset($data['network_health_distribution']) ? $data['network_health_distribution'] : null;
        $this->container['network_health_router'] = isset($data['network_health_router']) ? $data['network_health_router'] : null;
        $this->container['network_health_wireless'] = isset($data['network_health_wireless']) ? $data['network_health_wireless'] : null;
        $this->container['network_health_others'] = isset($data['network_health_others']) ? $data['network_health_others'] : null;
        $this->container['number_of_wired_clients'] = isset($data['number_of_wired_clients']) ? $data['number_of_wired_clients'] : null;
        $this->container['number_of_wireless_clients'] = isset($data['number_of_wireless_clients']) ? $data['number_of_wireless_clients'] : null;
        $this->container['wired_good_clients'] = isset($data['wired_good_clients']) ? $data['wired_good_clients'] : null;
        $this->container['wireless_good_clients'] = isset($data['wireless_good_clients']) ? $data['wireless_good_clients'] : null;
        $this->container['client_issue_count'] = isset($data['client_issue_count']) ? $data['client_issue_count'] : null;
        $this->container['overall_good_devices'] = isset($data['overall_good_devices']) ? $data['overall_good_devices'] : null;
        $this->container['access_good_count'] = isset($data['access_good_count']) ? $data['access_good_count'] : null;
        $this->container['access_total_count'] = isset($data['access_total_count']) ? $data['access_total_count'] : null;
        $this->container['core_good_count'] = isset($data['core_good_count']) ? $data['core_good_count'] : null;
        $this->container['core_total_count'] = isset($data['core_total_count']) ? $data['core_total_count'] : null;
        $this->container['distribution_good_count'] = isset($data['distribution_good_count']) ? $data['distribution_good_count'] : null;
        $this->container['distribution_total_count'] = isset($data['distribution_total_count']) ? $data['distribution_total_count'] : null;
        $this->container['router_good_count'] = isset($data['router_good_count']) ? $data['router_good_count'] : null;
        $this->container['router_total_count'] = isset($data['router_total_count']) ? $data['router_total_count'] : null;
        $this->container['wireless_device_good_count'] = isset($data['wireless_device_good_count']) ? $data['wireless_device_good_count'] : null;
        $this->container['wireless_device_total_count'] = isset($data['wireless_device_total_count']) ? $data['wireless_device_total_count'] : null;
        $this->container['application_health'] = isset($data['application_health']) ? $data['application_health'] : null;
        $this->container['application_good_count'] = isset($data['application_good_count']) ? $data['application_good_count'] : null;
        $this->container['application_total_count'] = isset($data['application_total_count']) ? $data['application_total_count'] : null;
        $this->container['application_bytes_total_count'] = isset($data['application_bytes_total_count']) ? $data['application_bytes_total_count'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets site_name
     *
     * @return string
     */
    public function getSiteName()
    {
        return $this->container['site_name'];
    }

    /**
     * Sets site_name
     *
     * @param string $site_name site_name
     *
     * @return $this
     */
    public function setSiteName($site_name)
    {
        $this->container['site_name'] = $site_name;

        return $this;
    }

    /**
     * Gets site_id
     *
     * @return string
     */
    public function getSiteId()
    {
        return $this->container['site_id'];
    }

    /**
     * Sets site_id
     *
     * @param string $site_id site_id
     *
     * @return $this
     */
    public function setSiteId($site_id)
    {
        $this->container['site_id'] = $site_id;

        return $this;
    }

    /**
     * Gets parent_site_id
     *
     * @return string
     */
    public function getParentSiteId()
    {
        return $this->container['parent_site_id'];
    }

    /**
     * Sets parent_site_id
     *
     * @param string $parent_site_id parent_site_id
     *
     * @return $this
     */
    public function setParentSiteId($parent_site_id)
    {
        $this->container['parent_site_id'] = $parent_site_id;

        return $this;
    }

    /**
     * Gets parent_site_name
     *
     * @return string
     */
    public function getParentSiteName()
    {
        return $this->container['parent_site_name'];
    }

    /**
     * Sets parent_site_name
     *
     * @param string $parent_site_name parent_site_name
     *
     * @return $this
     */
    public function setParentSiteName($parent_site_name)
    {
        $this->container['parent_site_name'] = $parent_site_name;

        return $this;
    }

    /**
     * Gets site_type
     *
     * @return string
     */
    public function getSiteType()
    {
        return $this->container['site_type'];
    }

    /**
     * Sets site_type
     *
     * @param string $site_type site_type
     *
     * @return $this
     */
    public function setSiteType($site_type)
    {
        $this->container['site_type'] = $site_type;

        return $this;
    }

    /**
     * Gets healthy_network_device_percentage
     *
     * @return string
     */
    public function getHealthyNetworkDevicePercentage()
    {
        return $this->container['healthy_network_device_percentage'];
    }

    /**
     * Sets healthy_network_device_percentage
     *
     * @param string $healthy_network_device_percentage healthy_network_device_percentage
     *
     * @return $this
     */
    public function setHealthyNetworkDevicePercentage($healthy_network_device_percentage)
    {
        $this->container['healthy_network_device_percentage'] = $healthy_network_device_percentage;

        return $this;
    }

    /**
     * Gets healthy_clients_percentage
     *
     * @return string
     */
    public function getHealthyClientsPercentage()
    {
        return $this->container['healthy_clients_percentage'];
    }

    /**
     * Sets healthy_clients_percentage
     *
     * @param string $healthy_clients_percentage healthy_clients_percentage
     *
     * @return $this
     */
    public function setHealthyClientsPercentage($healthy_clients_percentage)
    {
        $this->container['healthy_clients_percentage'] = $healthy_clients_percentage;

        return $this;
    }

    /**
     * Gets client_health_wired
     *
     * @return string
     */
    public function getClientHealthWired()
    {
        return $this->container['client_health_wired'];
    }

    /**
     * Sets client_health_wired
     *
     * @param string $client_health_wired client_health_wired
     *
     * @return $this
     */
    public function setClientHealthWired($client_health_wired)
    {
        $this->container['client_health_wired'] = $client_health_wired;

        return $this;
    }

    /**
     * Gets client_health_wireless
     *
     * @return string
     */
    public function getClientHealthWireless()
    {
        return $this->container['client_health_wireless'];
    }

    /**
     * Sets client_health_wireless
     *
     * @param string $client_health_wireless client_health_wireless
     *
     * @return $this
     */
    public function setClientHealthWireless($client_health_wireless)
    {
        $this->container['client_health_wireless'] = $client_health_wireless;

        return $this;
    }

    /**
     * Gets number_of_clients
     *
     * @return string
     */
    public function getNumberOfClients()
    {
        return $this->container['number_of_clients'];
    }

    /**
     * Sets number_of_clients
     *
     * @param string $number_of_clients number_of_clients
     *
     * @return $this
     */
    public function setNumberOfClients($number_of_clients)
    {
        $this->container['number_of_clients'] = $number_of_clients;

        return $this;
    }

    /**
     * Gets client_number_of_issues
     *
     * @return string
     */
    public function getClientNumberOfIssues()
    {
        return $this->container['client_number_of_issues'];
    }

    /**
     * Sets client_number_of_issues
     *
     * @param string $client_number_of_issues client_number_of_issues
     *
     * @return $this
     */
    public function setClientNumberOfIssues($client_number_of_issues)
    {
        $this->container['client_number_of_issues'] = $client_number_of_issues;

        return $this;
    }

    /**
     * Gets network_number_of_issues
     *
     * @return string
     */
    public function getNetworkNumberOfIssues()
    {
        return $this->container['network_number_of_issues'];
    }

    /**
     * Sets network_number_of_issues
     *
     * @param string $network_number_of_issues network_number_of_issues
     *
     * @return $this
     */
    public function setNetworkNumberOfIssues($network_number_of_issues)
    {
        $this->container['network_number_of_issues'] = $network_number_of_issues;

        return $this;
    }

    /**
     * Gets number_of_network_device
     *
     * @return string
     */
    public function getNumberOfNetworkDevice()
    {
        return $this->container['number_of_network_device'];
    }

    /**
     * Sets number_of_network_device
     *
     * @param string $number_of_network_device number_of_network_device
     *
     * @return $this
     */
    public function setNumberOfNetworkDevice($number_of_network_device)
    {
        $this->container['number_of_network_device'] = $number_of_network_device;

        return $this;
    }

    /**
     * Gets network_health_average
     *
     * @return string
     */
    public function getNetworkHealthAverage()
    {
        return $this->container['network_health_average'];
    }

    /**
     * Sets network_health_average
     *
     * @param string $network_health_average network_health_average
     *
     * @return $this
     */
    public function setNetworkHealthAverage($network_health_average)
    {
        $this->container['network_health_average'] = $network_health_average;

        return $this;
    }

    /**
     * Gets network_health_access
     *
     * @return string
     */
    public function getNetworkHealthAccess()
    {
        return $this->container['network_health_access'];
    }

    /**
     * Sets network_health_access
     *
     * @param string $network_health_access network_health_access
     *
     * @return $this
     */
    public function setNetworkHealthAccess($network_health_access)
    {
        $this->container['network_health_access'] = $network_health_access;

        return $this;
    }

    /**
     * Gets network_health_core
     *
     * @return string
     */
    public function getNetworkHealthCore()
    {
        return $this->container['network_health_core'];
    }

    /**
     * Sets network_health_core
     *
     * @param string $network_health_core network_health_core
     *
     * @return $this
     */
    public function setNetworkHealthCore($network_health_core)
    {
        $this->container['network_health_core'] = $network_health_core;

        return $this;
    }

    /**
     * Gets network_health_distribution
     *
     * @return string
     */
    public function getNetworkHealthDistribution()
    {
        return $this->container['network_health_distribution'];
    }

    /**
     * Sets network_health_distribution
     *
     * @param string $network_health_distribution network_health_distribution
     *
     * @return $this
     */
    public function setNetworkHealthDistribution($network_health_distribution)
    {
        $this->container['network_health_distribution'] = $network_health_distribution;

        return $this;
    }

    /**
     * Gets network_health_router
     *
     * @return string
     */
    public function getNetworkHealthRouter()
    {
        return $this->container['network_health_router'];
    }

    /**
     * Sets network_health_router
     *
     * @param string $network_health_router network_health_router
     *
     * @return $this
     */
    public function setNetworkHealthRouter($network_health_router)
    {
        $this->container['network_health_router'] = $network_health_router;

        return $this;
    }

    /**
     * Gets network_health_wireless
     *
     * @return string
     */
    public function getNetworkHealthWireless()
    {
        return $this->container['network_health_wireless'];
    }

    /**
     * Sets network_health_wireless
     *
     * @param string $network_health_wireless network_health_wireless
     *
     * @return $this
     */
    public function setNetworkHealthWireless($network_health_wireless)
    {
        $this->container['network_health_wireless'] = $network_health_wireless;

        return $this;
    }

    /**
     * Gets network_health_others
     *
     * @return string
     */
    public function getNetworkHealthOthers()
    {
        return $this->container['network_health_others'];
    }

    /**
     * Sets network_health_others
     *
     * @param string $network_health_others network_health_others
     *
     * @return $this
     */
    public function setNetworkHealthOthers($network_health_others)
    {
        $this->container['network_health_others'] = $network_health_others;

        return $this;
    }

    /**
     * Gets number_of_wired_clients
     *
     * @return string
     */
    public function getNumberOfWiredClients()
    {
        return $this->container['number_of_wired_clients'];
    }

    /**
     * Sets number_of_wired_clients
     *
     * @param string $number_of_wired_clients number_of_wired_clients
     *
     * @return $this
     */
    public function setNumberOfWiredClients($number_of_wired_clients)
    {
        $this->container['number_of_wired_clients'] = $number_of_wired_clients;

        return $this;
    }

    /**
     * Gets number_of_wireless_clients
     *
     * @return string
     */
    public function getNumberOfWirelessClients()
    {
        return $this->container['number_of_wireless_clients'];
    }

    /**
     * Sets number_of_wireless_clients
     *
     * @param string $number_of_wireless_clients number_of_wireless_clients
     *
     * @return $this
     */
    public function setNumberOfWirelessClients($number_of_wireless_clients)
    {
        $this->container['number_of_wireless_clients'] = $number_of_wireless_clients;

        return $this;
    }

    /**
     * Gets wired_good_clients
     *
     * @return string
     */
    public function getWiredGoodClients()
    {
        return $this->container['wired_good_clients'];
    }

    /**
     * Sets wired_good_clients
     *
     * @param string $wired_good_clients wired_good_clients
     *
     * @return $this
     */
    public function setWiredGoodClients($wired_good_clients)
    {
        $this->container['wired_good_clients'] = $wired_good_clients;

        return $this;
    }

    /**
     * Gets wireless_good_clients
     *
     * @return string
     */
    public function getWirelessGoodClients()
    {
        return $this->container['wireless_good_clients'];
    }

    /**
     * Sets wireless_good_clients
     *
     * @param string $wireless_good_clients wireless_good_clients
     *
     * @return $this
     */
    public function setWirelessGoodClients($wireless_good_clients)
    {
        $this->container['wireless_good_clients'] = $wireless_good_clients;

        return $this;
    }

    /**
     * Gets client_issue_count
     *
     * @return string
     */
    public function getClientIssueCount()
    {
        return $this->container['client_issue_count'];
    }

    /**
     * Sets client_issue_count
     *
     * @param string $client_issue_count client_issue_count
     *
     * @return $this
     */
    public function setClientIssueCount($client_issue_count)
    {
        $this->container['client_issue_count'] = $client_issue_count;

        return $this;
    }

    /**
     * Gets overall_good_devices
     *
     * @return string
     */
    public function getOverallGoodDevices()
    {
        return $this->container['overall_good_devices'];
    }

    /**
     * Sets overall_good_devices
     *
     * @param string $overall_good_devices overall_good_devices
     *
     * @return $this
     */
    public function setOverallGoodDevices($overall_good_devices)
    {
        $this->container['overall_good_devices'] = $overall_good_devices;

        return $this;
    }

    /**
     * Gets access_good_count
     *
     * @return string
     */
    public function getAccessGoodCount()
    {
        return $this->container['access_good_count'];
    }

    /**
     * Sets access_good_count
     *
     * @param string $access_good_count access_good_count
     *
     * @return $this
     */
    public function setAccessGoodCount($access_good_count)
    {
        $this->container['access_good_count'] = $access_good_count;

        return $this;
    }

    /**
     * Gets access_total_count
     *
     * @return string
     */
    public function getAccessTotalCount()
    {
        return $this->container['access_total_count'];
    }

    /**
     * Sets access_total_count
     *
     * @param string $access_total_count access_total_count
     *
     * @return $this
     */
    public function setAccessTotalCount($access_total_count)
    {
        $this->container['access_total_count'] = $access_total_count;

        return $this;
    }

    /**
     * Gets core_good_count
     *
     * @return string
     */
    public function getCoreGoodCount()
    {
        return $this->container['core_good_count'];
    }

    /**
     * Sets core_good_count
     *
     * @param string $core_good_count core_good_count
     *
     * @return $this
     */
    public function setCoreGoodCount($core_good_count)
    {
        $this->container['core_good_count'] = $core_good_count;

        return $this;
    }

    /**
     * Gets core_total_count
     *
     * @return string
     */
    public function getCoreTotalCount()
    {
        return $this->container['core_total_count'];
    }

    /**
     * Sets core_total_count
     *
     * @param string $core_total_count core_total_count
     *
     * @return $this
     */
    public function setCoreTotalCount($core_total_count)
    {
        $this->container['core_total_count'] = $core_total_count;

        return $this;
    }

    /**
     * Gets distribution_good_count
     *
     * @return string
     */
    public function getDistributionGoodCount()
    {
        return $this->container['distribution_good_count'];
    }

    /**
     * Sets distribution_good_count
     *
     * @param string $distribution_good_count distribution_good_count
     *
     * @return $this
     */
    public function setDistributionGoodCount($distribution_good_count)
    {
        $this->container['distribution_good_count'] = $distribution_good_count;

        return $this;
    }

    /**
     * Gets distribution_total_count
     *
     * @return string
     */
    public function getDistributionTotalCount()
    {
        return $this->container['distribution_total_count'];
    }

    /**
     * Sets distribution_total_count
     *
     * @param string $distribution_total_count distribution_total_count
     *
     * @return $this
     */
    public function setDistributionTotalCount($distribution_total_count)
    {
        $this->container['distribution_total_count'] = $distribution_total_count;

        return $this;
    }

    /**
     * Gets router_good_count
     *
     * @return string
     */
    public function getRouterGoodCount()
    {
        return $this->container['router_good_count'];
    }

    /**
     * Sets router_good_count
     *
     * @param string $router_good_count router_good_count
     *
     * @return $this
     */
    public function setRouterGoodCount($router_good_count)
    {
        $this->container['router_good_count'] = $router_good_count;

        return $this;
    }

    /**
     * Gets router_total_count
     *
     * @return string
     */
    public function getRouterTotalCount()
    {
        return $this->container['router_total_count'];
    }

    /**
     * Sets router_total_count
     *
     * @param string $router_total_count router_total_count
     *
     * @return $this
     */
    public function setRouterTotalCount($router_total_count)
    {
        $this->container['router_total_count'] = $router_total_count;

        return $this;
    }

    /**
     * Gets wireless_device_good_count
     *
     * @return string
     */
    public function getWirelessDeviceGoodCount()
    {
        return $this->container['wireless_device_good_count'];
    }

    /**
     * Sets wireless_device_good_count
     *
     * @param string $wireless_device_good_count wireless_device_good_count
     *
     * @return $this
     */
    public function setWirelessDeviceGoodCount($wireless_device_good_count)
    {
        $this->container['wireless_device_good_count'] = $wireless_device_good_count;

        return $this;
    }

    /**
     * Gets wireless_device_total_count
     *
     * @return string
     */
    public function getWirelessDeviceTotalCount()
    {
        return $this->container['wireless_device_total_count'];
    }

    /**
     * Sets wireless_device_total_count
     *
     * @param string $wireless_device_total_count wireless_device_total_count
     *
     * @return $this
     */
    public function setWirelessDeviceTotalCount($wireless_device_total_count)
    {
        $this->container['wireless_device_total_count'] = $wireless_device_total_count;

        return $this;
    }

    /**
     * Gets application_health
     *
     * @return string
     */
    public function getApplicationHealth()
    {
        return $this->container['application_health'];
    }

    /**
     * Sets application_health
     *
     * @param string $application_health application_health
     *
     * @return $this
     */
    public function setApplicationHealth($application_health)
    {
        $this->container['application_health'] = $application_health;

        return $this;
    }

    /**
     * Gets application_good_count
     *
     * @return string
     */
    public function getApplicationGoodCount()
    {
        return $this->container['application_good_count'];
    }

    /**
     * Sets application_good_count
     *
     * @param string $application_good_count application_good_count
     *
     * @return $this
     */
    public function setApplicationGoodCount($application_good_count)
    {
        $this->container['application_good_count'] = $application_good_count;

        return $this;
    }

    /**
     * Gets application_total_count
     *
     * @return string
     */
    public function getApplicationTotalCount()
    {
        return $this->container['application_total_count'];
    }

    /**
     * Sets application_total_count
     *
     * @param string $application_total_count application_total_count
     *
     * @return $this
     */
    public function setApplicationTotalCount($application_total_count)
    {
        $this->container['application_total_count'] = $application_total_count;

        return $this;
    }

    /**
     * Gets application_bytes_total_count
     *
     * @return string
     */
    public function getApplicationBytesTotalCount()
    {
        return $this->container['application_bytes_total_count'];
    }

    /**
     * Sets application_bytes_total_count
     *
     * @param string $application_bytes_total_count application_bytes_total_count
     *
     * @return $this
     */
    public function setApplicationBytesTotalCount($application_bytes_total_count)
    {
        $this->container['application_bytes_total_count'] = $application_bytes_total_count;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


