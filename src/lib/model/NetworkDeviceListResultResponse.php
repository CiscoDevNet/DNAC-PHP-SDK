<?php
/**
 * NetworkDeviceListResultResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cisco\com\dnac\v1\api\client\model;

use \ArrayAccess;
use \cisco\com\dnac\v1\api\client\ObjectSerializer;

/**
 * NetworkDeviceListResultResponse Class Doc Comment
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NetworkDeviceListResultResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'NetworkDeviceListResult_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'ap_manager_interface_ip' => 'string',
        'associated_wlc_ip' => 'string',
        'boot_date_time' => 'string',
        'collection_interval' => 'string',
        'collection_status' => 'string',
        'error_code' => 'string',
        'error_description' => 'string',
        'family' => 'string',
        'hostname' => 'string',
        'id' => 'string',
        'instance_tenant_id' => 'string',
        'instance_uuid' => 'string',
        'interface_count' => 'string',
        'inventory_status_detail' => 'string',
        'last_update_time' => 'string',
        'last_updated' => 'string',
        'line_card_count' => 'string',
        'line_card_id' => 'string',
        'location' => 'string',
        'location_name' => 'string',
        'mac_address' => 'string',
        'management_ip_address' => 'string',
        'memory_size' => 'string',
        'platform_id' => 'string',
        'reachability_failure_reason' => 'string',
        'reachability_status' => 'string',
        'role' => 'string',
        'role_source' => 'string',
        'serial_number' => 'string',
        'series' => 'string',
        'snmp_contact' => 'string',
        'snmp_location' => 'string',
        'software_type' => 'string',
        'software_version' => 'string',
        'tag_count' => 'string',
        'tunnel_udp_port' => 'string',
        'type' => 'string',
        'up_time' => 'string',
        'waas_device_mode' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'ap_manager_interface_ip' => null,
        'associated_wlc_ip' => null,
        'boot_date_time' => null,
        'collection_interval' => null,
        'collection_status' => null,
        'error_code' => null,
        'error_description' => null,
        'family' => null,
        'hostname' => null,
        'id' => null,
        'instance_tenant_id' => null,
        'instance_uuid' => null,
        'interface_count' => null,
        'inventory_status_detail' => null,
        'last_update_time' => null,
        'last_updated' => null,
        'line_card_count' => null,
        'line_card_id' => null,
        'location' => null,
        'location_name' => null,
        'mac_address' => null,
        'management_ip_address' => null,
        'memory_size' => null,
        'platform_id' => null,
        'reachability_failure_reason' => null,
        'reachability_status' => null,
        'role' => null,
        'role_source' => null,
        'serial_number' => null,
        'series' => null,
        'snmp_contact' => null,
        'snmp_location' => null,
        'software_type' => null,
        'software_version' => null,
        'tag_count' => null,
        'tunnel_udp_port' => null,
        'type' => null,
        'up_time' => null,
        'waas_device_mode' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'ap_manager_interface_ip' => 'apManagerInterfaceIp',
        'associated_wlc_ip' => 'associatedWlcIp',
        'boot_date_time' => 'bootDateTime',
        'collection_interval' => 'collectionInterval',
        'collection_status' => 'collectionStatus',
        'error_code' => 'errorCode',
        'error_description' => 'errorDescription',
        'family' => 'family',
        'hostname' => 'hostname',
        'id' => 'id',
        'instance_tenant_id' => 'instanceTenantId',
        'instance_uuid' => 'instanceUuid',
        'interface_count' => 'interfaceCount',
        'inventory_status_detail' => 'inventoryStatusDetail',
        'last_update_time' => 'lastUpdateTime',
        'last_updated' => 'lastUpdated',
        'line_card_count' => 'lineCardCount',
        'line_card_id' => 'lineCardId',
        'location' => 'location',
        'location_name' => 'locationName',
        'mac_address' => 'macAddress',
        'management_ip_address' => 'managementIpAddress',
        'memory_size' => 'memorySize',
        'platform_id' => 'platformId',
        'reachability_failure_reason' => 'reachabilityFailureReason',
        'reachability_status' => 'reachabilityStatus',
        'role' => 'role',
        'role_source' => 'roleSource',
        'serial_number' => 'serialNumber',
        'series' => 'series',
        'snmp_contact' => 'snmpContact',
        'snmp_location' => 'snmpLocation',
        'software_type' => 'softwareType',
        'software_version' => 'softwareVersion',
        'tag_count' => 'tagCount',
        'tunnel_udp_port' => 'tunnelUdpPort',
        'type' => 'type',
        'up_time' => 'upTime',
        'waas_device_mode' => 'waasDeviceMode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'ap_manager_interface_ip' => 'setApManagerInterfaceIp',
        'associated_wlc_ip' => 'setAssociatedWlcIp',
        'boot_date_time' => 'setBootDateTime',
        'collection_interval' => 'setCollectionInterval',
        'collection_status' => 'setCollectionStatus',
        'error_code' => 'setErrorCode',
        'error_description' => 'setErrorDescription',
        'family' => 'setFamily',
        'hostname' => 'setHostname',
        'id' => 'setId',
        'instance_tenant_id' => 'setInstanceTenantId',
        'instance_uuid' => 'setInstanceUuid',
        'interface_count' => 'setInterfaceCount',
        'inventory_status_detail' => 'setInventoryStatusDetail',
        'last_update_time' => 'setLastUpdateTime',
        'last_updated' => 'setLastUpdated',
        'line_card_count' => 'setLineCardCount',
        'line_card_id' => 'setLineCardId',
        'location' => 'setLocation',
        'location_name' => 'setLocationName',
        'mac_address' => 'setMacAddress',
        'management_ip_address' => 'setManagementIpAddress',
        'memory_size' => 'setMemorySize',
        'platform_id' => 'setPlatformId',
        'reachability_failure_reason' => 'setReachabilityFailureReason',
        'reachability_status' => 'setReachabilityStatus',
        'role' => 'setRole',
        'role_source' => 'setRoleSource',
        'serial_number' => 'setSerialNumber',
        'series' => 'setSeries',
        'snmp_contact' => 'setSnmpContact',
        'snmp_location' => 'setSnmpLocation',
        'software_type' => 'setSoftwareType',
        'software_version' => 'setSoftwareVersion',
        'tag_count' => 'setTagCount',
        'tunnel_udp_port' => 'setTunnelUdpPort',
        'type' => 'setType',
        'up_time' => 'setUpTime',
        'waas_device_mode' => 'setWaasDeviceMode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'ap_manager_interface_ip' => 'getApManagerInterfaceIp',
        'associated_wlc_ip' => 'getAssociatedWlcIp',
        'boot_date_time' => 'getBootDateTime',
        'collection_interval' => 'getCollectionInterval',
        'collection_status' => 'getCollectionStatus',
        'error_code' => 'getErrorCode',
        'error_description' => 'getErrorDescription',
        'family' => 'getFamily',
        'hostname' => 'getHostname',
        'id' => 'getId',
        'instance_tenant_id' => 'getInstanceTenantId',
        'instance_uuid' => 'getInstanceUuid',
        'interface_count' => 'getInterfaceCount',
        'inventory_status_detail' => 'getInventoryStatusDetail',
        'last_update_time' => 'getLastUpdateTime',
        'last_updated' => 'getLastUpdated',
        'line_card_count' => 'getLineCardCount',
        'line_card_id' => 'getLineCardId',
        'location' => 'getLocation',
        'location_name' => 'getLocationName',
        'mac_address' => 'getMacAddress',
        'management_ip_address' => 'getManagementIpAddress',
        'memory_size' => 'getMemorySize',
        'platform_id' => 'getPlatformId',
        'reachability_failure_reason' => 'getReachabilityFailureReason',
        'reachability_status' => 'getReachabilityStatus',
        'role' => 'getRole',
        'role_source' => 'getRoleSource',
        'serial_number' => 'getSerialNumber',
        'series' => 'getSeries',
        'snmp_contact' => 'getSnmpContact',
        'snmp_location' => 'getSnmpLocation',
        'software_type' => 'getSoftwareType',
        'software_version' => 'getSoftwareVersion',
        'tag_count' => 'getTagCount',
        'tunnel_udp_port' => 'getTunnelUdpPort',
        'type' => 'getType',
        'up_time' => 'getUpTime',
        'waas_device_mode' => 'getWaasDeviceMode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['ap_manager_interface_ip'] = isset($data['ap_manager_interface_ip']) ? $data['ap_manager_interface_ip'] : null;
        $this->container['associated_wlc_ip'] = isset($data['associated_wlc_ip']) ? $data['associated_wlc_ip'] : null;
        $this->container['boot_date_time'] = isset($data['boot_date_time']) ? $data['boot_date_time'] : null;
        $this->container['collection_interval'] = isset($data['collection_interval']) ? $data['collection_interval'] : null;
        $this->container['collection_status'] = isset($data['collection_status']) ? $data['collection_status'] : null;
        $this->container['error_code'] = isset($data['error_code']) ? $data['error_code'] : null;
        $this->container['error_description'] = isset($data['error_description']) ? $data['error_description'] : null;
        $this->container['family'] = isset($data['family']) ? $data['family'] : null;
        $this->container['hostname'] = isset($data['hostname']) ? $data['hostname'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['instance_tenant_id'] = isset($data['instance_tenant_id']) ? $data['instance_tenant_id'] : null;
        $this->container['instance_uuid'] = isset($data['instance_uuid']) ? $data['instance_uuid'] : null;
        $this->container['interface_count'] = isset($data['interface_count']) ? $data['interface_count'] : null;
        $this->container['inventory_status_detail'] = isset($data['inventory_status_detail']) ? $data['inventory_status_detail'] : null;
        $this->container['last_update_time'] = isset($data['last_update_time']) ? $data['last_update_time'] : null;
        $this->container['last_updated'] = isset($data['last_updated']) ? $data['last_updated'] : null;
        $this->container['line_card_count'] = isset($data['line_card_count']) ? $data['line_card_count'] : null;
        $this->container['line_card_id'] = isset($data['line_card_id']) ? $data['line_card_id'] : null;
        $this->container['location'] = isset($data['location']) ? $data['location'] : null;
        $this->container['location_name'] = isset($data['location_name']) ? $data['location_name'] : null;
        $this->container['mac_address'] = isset($data['mac_address']) ? $data['mac_address'] : null;
        $this->container['management_ip_address'] = isset($data['management_ip_address']) ? $data['management_ip_address'] : null;
        $this->container['memory_size'] = isset($data['memory_size']) ? $data['memory_size'] : null;
        $this->container['platform_id'] = isset($data['platform_id']) ? $data['platform_id'] : null;
        $this->container['reachability_failure_reason'] = isset($data['reachability_failure_reason']) ? $data['reachability_failure_reason'] : null;
        $this->container['reachability_status'] = isset($data['reachability_status']) ? $data['reachability_status'] : null;
        $this->container['role'] = isset($data['role']) ? $data['role'] : null;
        $this->container['role_source'] = isset($data['role_source']) ? $data['role_source'] : null;
        $this->container['serial_number'] = isset($data['serial_number']) ? $data['serial_number'] : null;
        $this->container['series'] = isset($data['series']) ? $data['series'] : null;
        $this->container['snmp_contact'] = isset($data['snmp_contact']) ? $data['snmp_contact'] : null;
        $this->container['snmp_location'] = isset($data['snmp_location']) ? $data['snmp_location'] : null;
        $this->container['software_type'] = isset($data['software_type']) ? $data['software_type'] : null;
        $this->container['software_version'] = isset($data['software_version']) ? $data['software_version'] : null;
        $this->container['tag_count'] = isset($data['tag_count']) ? $data['tag_count'] : null;
        $this->container['tunnel_udp_port'] = isset($data['tunnel_udp_port']) ? $data['tunnel_udp_port'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['up_time'] = isset($data['up_time']) ? $data['up_time'] : null;
        $this->container['waas_device_mode'] = isset($data['waas_device_mode']) ? $data['waas_device_mode'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets ap_manager_interface_ip
     *
     * @return string
     */
    public function getApManagerInterfaceIp()
    {
        return $this->container['ap_manager_interface_ip'];
    }

    /**
     * Sets ap_manager_interface_ip
     *
     * @param string $ap_manager_interface_ip ap_manager_interface_ip
     *
     * @return $this
     */
    public function setApManagerInterfaceIp($ap_manager_interface_ip)
    {
        $this->container['ap_manager_interface_ip'] = $ap_manager_interface_ip;

        return $this;
    }

    /**
     * Gets associated_wlc_ip
     *
     * @return string
     */
    public function getAssociatedWlcIp()
    {
        return $this->container['associated_wlc_ip'];
    }

    /**
     * Sets associated_wlc_ip
     *
     * @param string $associated_wlc_ip associated_wlc_ip
     *
     * @return $this
     */
    public function setAssociatedWlcIp($associated_wlc_ip)
    {
        $this->container['associated_wlc_ip'] = $associated_wlc_ip;

        return $this;
    }

    /**
     * Gets boot_date_time
     *
     * @return string
     */
    public function getBootDateTime()
    {
        return $this->container['boot_date_time'];
    }

    /**
     * Sets boot_date_time
     *
     * @param string $boot_date_time boot_date_time
     *
     * @return $this
     */
    public function setBootDateTime($boot_date_time)
    {
        $this->container['boot_date_time'] = $boot_date_time;

        return $this;
    }

    /**
     * Gets collection_interval
     *
     * @return string
     */
    public function getCollectionInterval()
    {
        return $this->container['collection_interval'];
    }

    /**
     * Sets collection_interval
     *
     * @param string $collection_interval collection_interval
     *
     * @return $this
     */
    public function setCollectionInterval($collection_interval)
    {
        $this->container['collection_interval'] = $collection_interval;

        return $this;
    }

    /**
     * Gets collection_status
     *
     * @return string
     */
    public function getCollectionStatus()
    {
        return $this->container['collection_status'];
    }

    /**
     * Sets collection_status
     *
     * @param string $collection_status collection_status
     *
     * @return $this
     */
    public function setCollectionStatus($collection_status)
    {
        $this->container['collection_status'] = $collection_status;

        return $this;
    }

    /**
     * Gets error_code
     *
     * @return string
     */
    public function getErrorCode()
    {
        return $this->container['error_code'];
    }

    /**
     * Sets error_code
     *
     * @param string $error_code error_code
     *
     * @return $this
     */
    public function setErrorCode($error_code)
    {
        $this->container['error_code'] = $error_code;

        return $this;
    }

    /**
     * Gets error_description
     *
     * @return string
     */
    public function getErrorDescription()
    {
        return $this->container['error_description'];
    }

    /**
     * Sets error_description
     *
     * @param string $error_description error_description
     *
     * @return $this
     */
    public function setErrorDescription($error_description)
    {
        $this->container['error_description'] = $error_description;

        return $this;
    }

    /**
     * Gets family
     *
     * @return string
     */
    public function getFamily()
    {
        return $this->container['family'];
    }

    /**
     * Sets family
     *
     * @param string $family family
     *
     * @return $this
     */
    public function setFamily($family)
    {
        $this->container['family'] = $family;

        return $this;
    }

    /**
     * Gets hostname
     *
     * @return string
     */
    public function getHostname()
    {
        return $this->container['hostname'];
    }

    /**
     * Sets hostname
     *
     * @param string $hostname hostname
     *
     * @return $this
     */
    public function setHostname($hostname)
    {
        $this->container['hostname'] = $hostname;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets instance_tenant_id
     *
     * @return string
     */
    public function getInstanceTenantId()
    {
        return $this->container['instance_tenant_id'];
    }

    /**
     * Sets instance_tenant_id
     *
     * @param string $instance_tenant_id instance_tenant_id
     *
     * @return $this
     */
    public function setInstanceTenantId($instance_tenant_id)
    {
        $this->container['instance_tenant_id'] = $instance_tenant_id;

        return $this;
    }

    /**
     * Gets instance_uuid
     *
     * @return string
     */
    public function getInstanceUuid()
    {
        return $this->container['instance_uuid'];
    }

    /**
     * Sets instance_uuid
     *
     * @param string $instance_uuid instance_uuid
     *
     * @return $this
     */
    public function setInstanceUuid($instance_uuid)
    {
        $this->container['instance_uuid'] = $instance_uuid;

        return $this;
    }

    /**
     * Gets interface_count
     *
     * @return string
     */
    public function getInterfaceCount()
    {
        return $this->container['interface_count'];
    }

    /**
     * Sets interface_count
     *
     * @param string $interface_count interface_count
     *
     * @return $this
     */
    public function setInterfaceCount($interface_count)
    {
        $this->container['interface_count'] = $interface_count;

        return $this;
    }

    /**
     * Gets inventory_status_detail
     *
     * @return string
     */
    public function getInventoryStatusDetail()
    {
        return $this->container['inventory_status_detail'];
    }

    /**
     * Sets inventory_status_detail
     *
     * @param string $inventory_status_detail inventory_status_detail
     *
     * @return $this
     */
    public function setInventoryStatusDetail($inventory_status_detail)
    {
        $this->container['inventory_status_detail'] = $inventory_status_detail;

        return $this;
    }

    /**
     * Gets last_update_time
     *
     * @return string
     */
    public function getLastUpdateTime()
    {
        return $this->container['last_update_time'];
    }

    /**
     * Sets last_update_time
     *
     * @param string $last_update_time last_update_time
     *
     * @return $this
     */
    public function setLastUpdateTime($last_update_time)
    {
        $this->container['last_update_time'] = $last_update_time;

        return $this;
    }

    /**
     * Gets last_updated
     *
     * @return string
     */
    public function getLastUpdated()
    {
        return $this->container['last_updated'];
    }

    /**
     * Sets last_updated
     *
     * @param string $last_updated last_updated
     *
     * @return $this
     */
    public function setLastUpdated($last_updated)
    {
        $this->container['last_updated'] = $last_updated;

        return $this;
    }

    /**
     * Gets line_card_count
     *
     * @return string
     */
    public function getLineCardCount()
    {
        return $this->container['line_card_count'];
    }

    /**
     * Sets line_card_count
     *
     * @param string $line_card_count line_card_count
     *
     * @return $this
     */
    public function setLineCardCount($line_card_count)
    {
        $this->container['line_card_count'] = $line_card_count;

        return $this;
    }

    /**
     * Gets line_card_id
     *
     * @return string
     */
    public function getLineCardId()
    {
        return $this->container['line_card_id'];
    }

    /**
     * Sets line_card_id
     *
     * @param string $line_card_id line_card_id
     *
     * @return $this
     */
    public function setLineCardId($line_card_id)
    {
        $this->container['line_card_id'] = $line_card_id;

        return $this;
    }

    /**
     * Gets location
     *
     * @return string
     */
    public function getLocation()
    {
        return $this->container['location'];
    }

    /**
     * Sets location
     *
     * @param string $location location
     *
     * @return $this
     */
    public function setLocation($location)
    {
        $this->container['location'] = $location;

        return $this;
    }

    /**
     * Gets location_name
     *
     * @return string
     */
    public function getLocationName()
    {
        return $this->container['location_name'];
    }

    /**
     * Sets location_name
     *
     * @param string $location_name location_name
     *
     * @return $this
     */
    public function setLocationName($location_name)
    {
        $this->container['location_name'] = $location_name;

        return $this;
    }

    /**
     * Gets mac_address
     *
     * @return string
     */
    public function getMacAddress()
    {
        return $this->container['mac_address'];
    }

    /**
     * Sets mac_address
     *
     * @param string $mac_address mac_address
     *
     * @return $this
     */
    public function setMacAddress($mac_address)
    {
        $this->container['mac_address'] = $mac_address;

        return $this;
    }

    /**
     * Gets management_ip_address
     *
     * @return string
     */
    public function getManagementIpAddress()
    {
        return $this->container['management_ip_address'];
    }

    /**
     * Sets management_ip_address
     *
     * @param string $management_ip_address management_ip_address
     *
     * @return $this
     */
    public function setManagementIpAddress($management_ip_address)
    {
        $this->container['management_ip_address'] = $management_ip_address;

        return $this;
    }

    /**
     * Gets memory_size
     *
     * @return string
     */
    public function getMemorySize()
    {
        return $this->container['memory_size'];
    }

    /**
     * Sets memory_size
     *
     * @param string $memory_size memory_size
     *
     * @return $this
     */
    public function setMemorySize($memory_size)
    {
        $this->container['memory_size'] = $memory_size;

        return $this;
    }

    /**
     * Gets platform_id
     *
     * @return string
     */
    public function getPlatformId()
    {
        return $this->container['platform_id'];
    }

    /**
     * Sets platform_id
     *
     * @param string $platform_id platform_id
     *
     * @return $this
     */
    public function setPlatformId($platform_id)
    {
        $this->container['platform_id'] = $platform_id;

        return $this;
    }

    /**
     * Gets reachability_failure_reason
     *
     * @return string
     */
    public function getReachabilityFailureReason()
    {
        return $this->container['reachability_failure_reason'];
    }

    /**
     * Sets reachability_failure_reason
     *
     * @param string $reachability_failure_reason reachability_failure_reason
     *
     * @return $this
     */
    public function setReachabilityFailureReason($reachability_failure_reason)
    {
        $this->container['reachability_failure_reason'] = $reachability_failure_reason;

        return $this;
    }

    /**
     * Gets reachability_status
     *
     * @return string
     */
    public function getReachabilityStatus()
    {
        return $this->container['reachability_status'];
    }

    /**
     * Sets reachability_status
     *
     * @param string $reachability_status reachability_status
     *
     * @return $this
     */
    public function setReachabilityStatus($reachability_status)
    {
        $this->container['reachability_status'] = $reachability_status;

        return $this;
    }

    /**
     * Gets role
     *
     * @return string
     */
    public function getRole()
    {
        return $this->container['role'];
    }

    /**
     * Sets role
     *
     * @param string $role role
     *
     * @return $this
     */
    public function setRole($role)
    {
        $this->container['role'] = $role;

        return $this;
    }

    /**
     * Gets role_source
     *
     * @return string
     */
    public function getRoleSource()
    {
        return $this->container['role_source'];
    }

    /**
     * Sets role_source
     *
     * @param string $role_source role_source
     *
     * @return $this
     */
    public function setRoleSource($role_source)
    {
        $this->container['role_source'] = $role_source;

        return $this;
    }

    /**
     * Gets serial_number
     *
     * @return string
     */
    public function getSerialNumber()
    {
        return $this->container['serial_number'];
    }

    /**
     * Sets serial_number
     *
     * @param string $serial_number serial_number
     *
     * @return $this
     */
    public function setSerialNumber($serial_number)
    {
        $this->container['serial_number'] = $serial_number;

        return $this;
    }

    /**
     * Gets series
     *
     * @return string
     */
    public function getSeries()
    {
        return $this->container['series'];
    }

    /**
     * Sets series
     *
     * @param string $series series
     *
     * @return $this
     */
    public function setSeries($series)
    {
        $this->container['series'] = $series;

        return $this;
    }

    /**
     * Gets snmp_contact
     *
     * @return string
     */
    public function getSnmpContact()
    {
        return $this->container['snmp_contact'];
    }

    /**
     * Sets snmp_contact
     *
     * @param string $snmp_contact snmp_contact
     *
     * @return $this
     */
    public function setSnmpContact($snmp_contact)
    {
        $this->container['snmp_contact'] = $snmp_contact;

        return $this;
    }

    /**
     * Gets snmp_location
     *
     * @return string
     */
    public function getSnmpLocation()
    {
        return $this->container['snmp_location'];
    }

    /**
     * Sets snmp_location
     *
     * @param string $snmp_location snmp_location
     *
     * @return $this
     */
    public function setSnmpLocation($snmp_location)
    {
        $this->container['snmp_location'] = $snmp_location;

        return $this;
    }

    /**
     * Gets software_type
     *
     * @return string
     */
    public function getSoftwareType()
    {
        return $this->container['software_type'];
    }

    /**
     * Sets software_type
     *
     * @param string $software_type software_type
     *
     * @return $this
     */
    public function setSoftwareType($software_type)
    {
        $this->container['software_type'] = $software_type;

        return $this;
    }

    /**
     * Gets software_version
     *
     * @return string
     */
    public function getSoftwareVersion()
    {
        return $this->container['software_version'];
    }

    /**
     * Sets software_version
     *
     * @param string $software_version software_version
     *
     * @return $this
     */
    public function setSoftwareVersion($software_version)
    {
        $this->container['software_version'] = $software_version;

        return $this;
    }

    /**
     * Gets tag_count
     *
     * @return string
     */
    public function getTagCount()
    {
        return $this->container['tag_count'];
    }

    /**
     * Sets tag_count
     *
     * @param string $tag_count tag_count
     *
     * @return $this
     */
    public function setTagCount($tag_count)
    {
        $this->container['tag_count'] = $tag_count;

        return $this;
    }

    /**
     * Gets tunnel_udp_port
     *
     * @return string
     */
    public function getTunnelUdpPort()
    {
        return $this->container['tunnel_udp_port'];
    }

    /**
     * Sets tunnel_udp_port
     *
     * @param string $tunnel_udp_port tunnel_udp_port
     *
     * @return $this
     */
    public function setTunnelUdpPort($tunnel_udp_port)
    {
        $this->container['tunnel_udp_port'] = $tunnel_udp_port;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets up_time
     *
     * @return string
     */
    public function getUpTime()
    {
        return $this->container['up_time'];
    }

    /**
     * Sets up_time
     *
     * @param string $up_time up_time
     *
     * @return $this
     */
    public function setUpTime($up_time)
    {
        $this->container['up_time'] = $up_time;

        return $this;
    }

    /**
     * Gets waas_device_mode
     *
     * @return string
     */
    public function getWaasDeviceMode()
    {
        return $this->container['waas_device_mode'];
    }

    /**
     * Sets waas_device_mode
     *
     * @param string $waas_device_mode waas_device_mode
     *
     * @return $this
     */
    public function setWaasDeviceMode($waas_device_mode)
    {
        $this->container['waas_device_mode'] = $waas_device_mode;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


