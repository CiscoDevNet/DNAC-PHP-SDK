<?php
/**
 * NetworkDeviceDetailResponseResponse
 *
 * PHP version 5
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cisco\com\dnac\v1\api\client\model;

use \ArrayAccess;
use \cisco\com\dnac\v1\api\client\ObjectSerializer;

/**
 * NetworkDeviceDetailResponseResponse Class Doc Comment
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class NetworkDeviceDetailResponseResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'NetworkDeviceDetailResponse_response';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'management_ip_addr' => 'string',
        'serial_number' => 'string',
        'nw_device_name' => 'string',
        'op_state' => 'string',
        'platform_id' => 'string',
        'nw_device_id' => 'string',
        'sys_uptime' => 'string',
        'mode' => 'string',
        'reset_reason' => 'string',
        'nw_device_role' => 'string',
        'up_time' => 'string',
        'nw_device_family' => 'string',
        'mac_address' => 'string',
        'connected_time' => 'string',
        'software_version' => 'string',
        'sub_mode' => 'string',
        'nw_device_type' => 'string',
        'overall_health' => 'string',
        'memory_score' => 'string',
        'cpu_score' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'management_ip_addr' => null,
        'serial_number' => null,
        'nw_device_name' => null,
        'op_state' => null,
        'platform_id' => null,
        'nw_device_id' => null,
        'sys_uptime' => null,
        'mode' => null,
        'reset_reason' => null,
        'nw_device_role' => null,
        'up_time' => null,
        'nw_device_family' => null,
        'mac_address' => null,
        'connected_time' => null,
        'software_version' => null,
        'sub_mode' => null,
        'nw_device_type' => null,
        'overall_health' => null,
        'memory_score' => null,
        'cpu_score' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'management_ip_addr' => 'managementIpAddr',
        'serial_number' => 'serialNumber',
        'nw_device_name' => 'nwDeviceName',
        'op_state' => 'opState',
        'platform_id' => 'platformId',
        'nw_device_id' => 'nwDeviceId',
        'sys_uptime' => 'sysUptime',
        'mode' => 'mode',
        'reset_reason' => 'resetReason',
        'nw_device_role' => 'nwDeviceRole',
        'up_time' => 'upTime',
        'nw_device_family' => 'nwDeviceFamily',
        'mac_address' => 'macAddress',
        'connected_time' => 'connectedTime',
        'software_version' => 'softwareVersion',
        'sub_mode' => 'subMode',
        'nw_device_type' => 'nwDeviceType',
        'overall_health' => 'overallHealth',
        'memory_score' => 'memoryScore',
        'cpu_score' => 'cpuScore'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'management_ip_addr' => 'setManagementIpAddr',
        'serial_number' => 'setSerialNumber',
        'nw_device_name' => 'setNwDeviceName',
        'op_state' => 'setOpState',
        'platform_id' => 'setPlatformId',
        'nw_device_id' => 'setNwDeviceId',
        'sys_uptime' => 'setSysUptime',
        'mode' => 'setMode',
        'reset_reason' => 'setResetReason',
        'nw_device_role' => 'setNwDeviceRole',
        'up_time' => 'setUpTime',
        'nw_device_family' => 'setNwDeviceFamily',
        'mac_address' => 'setMacAddress',
        'connected_time' => 'setConnectedTime',
        'software_version' => 'setSoftwareVersion',
        'sub_mode' => 'setSubMode',
        'nw_device_type' => 'setNwDeviceType',
        'overall_health' => 'setOverallHealth',
        'memory_score' => 'setMemoryScore',
        'cpu_score' => 'setCpuScore'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'management_ip_addr' => 'getManagementIpAddr',
        'serial_number' => 'getSerialNumber',
        'nw_device_name' => 'getNwDeviceName',
        'op_state' => 'getOpState',
        'platform_id' => 'getPlatformId',
        'nw_device_id' => 'getNwDeviceId',
        'sys_uptime' => 'getSysUptime',
        'mode' => 'getMode',
        'reset_reason' => 'getResetReason',
        'nw_device_role' => 'getNwDeviceRole',
        'up_time' => 'getUpTime',
        'nw_device_family' => 'getNwDeviceFamily',
        'mac_address' => 'getMacAddress',
        'connected_time' => 'getConnectedTime',
        'software_version' => 'getSoftwareVersion',
        'sub_mode' => 'getSubMode',
        'nw_device_type' => 'getNwDeviceType',
        'overall_health' => 'getOverallHealth',
        'memory_score' => 'getMemoryScore',
        'cpu_score' => 'getCpuScore'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['management_ip_addr'] = isset($data['management_ip_addr']) ? $data['management_ip_addr'] : null;
        $this->container['serial_number'] = isset($data['serial_number']) ? $data['serial_number'] : null;
        $this->container['nw_device_name'] = isset($data['nw_device_name']) ? $data['nw_device_name'] : null;
        $this->container['op_state'] = isset($data['op_state']) ? $data['op_state'] : null;
        $this->container['platform_id'] = isset($data['platform_id']) ? $data['platform_id'] : null;
        $this->container['nw_device_id'] = isset($data['nw_device_id']) ? $data['nw_device_id'] : null;
        $this->container['sys_uptime'] = isset($data['sys_uptime']) ? $data['sys_uptime'] : null;
        $this->container['mode'] = isset($data['mode']) ? $data['mode'] : null;
        $this->container['reset_reason'] = isset($data['reset_reason']) ? $data['reset_reason'] : null;
        $this->container['nw_device_role'] = isset($data['nw_device_role']) ? $data['nw_device_role'] : null;
        $this->container['up_time'] = isset($data['up_time']) ? $data['up_time'] : null;
        $this->container['nw_device_family'] = isset($data['nw_device_family']) ? $data['nw_device_family'] : null;
        $this->container['mac_address'] = isset($data['mac_address']) ? $data['mac_address'] : null;
        $this->container['connected_time'] = isset($data['connected_time']) ? $data['connected_time'] : null;
        $this->container['software_version'] = isset($data['software_version']) ? $data['software_version'] : null;
        $this->container['sub_mode'] = isset($data['sub_mode']) ? $data['sub_mode'] : null;
        $this->container['nw_device_type'] = isset($data['nw_device_type']) ? $data['nw_device_type'] : null;
        $this->container['overall_health'] = isset($data['overall_health']) ? $data['overall_health'] : null;
        $this->container['memory_score'] = isset($data['memory_score']) ? $data['memory_score'] : null;
        $this->container['cpu_score'] = isset($data['cpu_score']) ? $data['cpu_score'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets management_ip_addr
     *
     * @return string
     */
    public function getManagementIpAddr()
    {
        return $this->container['management_ip_addr'];
    }

    /**
     * Sets management_ip_addr
     *
     * @param string $management_ip_addr management_ip_addr
     *
     * @return $this
     */
    public function setManagementIpAddr($management_ip_addr)
    {
        $this->container['management_ip_addr'] = $management_ip_addr;

        return $this;
    }

    /**
     * Gets serial_number
     *
     * @return string
     */
    public function getSerialNumber()
    {
        return $this->container['serial_number'];
    }

    /**
     * Sets serial_number
     *
     * @param string $serial_number serial_number
     *
     * @return $this
     */
    public function setSerialNumber($serial_number)
    {
        $this->container['serial_number'] = $serial_number;

        return $this;
    }

    /**
     * Gets nw_device_name
     *
     * @return string
     */
    public function getNwDeviceName()
    {
        return $this->container['nw_device_name'];
    }

    /**
     * Sets nw_device_name
     *
     * @param string $nw_device_name nw_device_name
     *
     * @return $this
     */
    public function setNwDeviceName($nw_device_name)
    {
        $this->container['nw_device_name'] = $nw_device_name;

        return $this;
    }

    /**
     * Gets op_state
     *
     * @return string
     */
    public function getOpState()
    {
        return $this->container['op_state'];
    }

    /**
     * Sets op_state
     *
     * @param string $op_state op_state
     *
     * @return $this
     */
    public function setOpState($op_state)
    {
        $this->container['op_state'] = $op_state;

        return $this;
    }

    /**
     * Gets platform_id
     *
     * @return string
     */
    public function getPlatformId()
    {
        return $this->container['platform_id'];
    }

    /**
     * Sets platform_id
     *
     * @param string $platform_id platform_id
     *
     * @return $this
     */
    public function setPlatformId($platform_id)
    {
        $this->container['platform_id'] = $platform_id;

        return $this;
    }

    /**
     * Gets nw_device_id
     *
     * @return string
     */
    public function getNwDeviceId()
    {
        return $this->container['nw_device_id'];
    }

    /**
     * Sets nw_device_id
     *
     * @param string $nw_device_id nw_device_id
     *
     * @return $this
     */
    public function setNwDeviceId($nw_device_id)
    {
        $this->container['nw_device_id'] = $nw_device_id;

        return $this;
    }

    /**
     * Gets sys_uptime
     *
     * @return string
     */
    public function getSysUptime()
    {
        return $this->container['sys_uptime'];
    }

    /**
     * Sets sys_uptime
     *
     * @param string $sys_uptime sys_uptime
     *
     * @return $this
     */
    public function setSysUptime($sys_uptime)
    {
        $this->container['sys_uptime'] = $sys_uptime;

        return $this;
    }

    /**
     * Gets mode
     *
     * @return string
     */
    public function getMode()
    {
        return $this->container['mode'];
    }

    /**
     * Sets mode
     *
     * @param string $mode mode
     *
     * @return $this
     */
    public function setMode($mode)
    {
        $this->container['mode'] = $mode;

        return $this;
    }

    /**
     * Gets reset_reason
     *
     * @return string
     */
    public function getResetReason()
    {
        return $this->container['reset_reason'];
    }

    /**
     * Sets reset_reason
     *
     * @param string $reset_reason reset_reason
     *
     * @return $this
     */
    public function setResetReason($reset_reason)
    {
        $this->container['reset_reason'] = $reset_reason;

        return $this;
    }

    /**
     * Gets nw_device_role
     *
     * @return string
     */
    public function getNwDeviceRole()
    {
        return $this->container['nw_device_role'];
    }

    /**
     * Sets nw_device_role
     *
     * @param string $nw_device_role nw_device_role
     *
     * @return $this
     */
    public function setNwDeviceRole($nw_device_role)
    {
        $this->container['nw_device_role'] = $nw_device_role;

        return $this;
    }

    /**
     * Gets up_time
     *
     * @return string
     */
    public function getUpTime()
    {
        return $this->container['up_time'];
    }

    /**
     * Sets up_time
     *
     * @param string $up_time up_time
     *
     * @return $this
     */
    public function setUpTime($up_time)
    {
        $this->container['up_time'] = $up_time;

        return $this;
    }

    /**
     * Gets nw_device_family
     *
     * @return string
     */
    public function getNwDeviceFamily()
    {
        return $this->container['nw_device_family'];
    }

    /**
     * Sets nw_device_family
     *
     * @param string $nw_device_family nw_device_family
     *
     * @return $this
     */
    public function setNwDeviceFamily($nw_device_family)
    {
        $this->container['nw_device_family'] = $nw_device_family;

        return $this;
    }

    /**
     * Gets mac_address
     *
     * @return string
     */
    public function getMacAddress()
    {
        return $this->container['mac_address'];
    }

    /**
     * Sets mac_address
     *
     * @param string $mac_address mac_address
     *
     * @return $this
     */
    public function setMacAddress($mac_address)
    {
        $this->container['mac_address'] = $mac_address;

        return $this;
    }

    /**
     * Gets connected_time
     *
     * @return string
     */
    public function getConnectedTime()
    {
        return $this->container['connected_time'];
    }

    /**
     * Sets connected_time
     *
     * @param string $connected_time connected_time
     *
     * @return $this
     */
    public function setConnectedTime($connected_time)
    {
        $this->container['connected_time'] = $connected_time;

        return $this;
    }

    /**
     * Gets software_version
     *
     * @return string
     */
    public function getSoftwareVersion()
    {
        return $this->container['software_version'];
    }

    /**
     * Sets software_version
     *
     * @param string $software_version software_version
     *
     * @return $this
     */
    public function setSoftwareVersion($software_version)
    {
        $this->container['software_version'] = $software_version;

        return $this;
    }

    /**
     * Gets sub_mode
     *
     * @return string
     */
    public function getSubMode()
    {
        return $this->container['sub_mode'];
    }

    /**
     * Sets sub_mode
     *
     * @param string $sub_mode sub_mode
     *
     * @return $this
     */
    public function setSubMode($sub_mode)
    {
        $this->container['sub_mode'] = $sub_mode;

        return $this;
    }

    /**
     * Gets nw_device_type
     *
     * @return string
     */
    public function getNwDeviceType()
    {
        return $this->container['nw_device_type'];
    }

    /**
     * Sets nw_device_type
     *
     * @param string $nw_device_type nw_device_type
     *
     * @return $this
     */
    public function setNwDeviceType($nw_device_type)
    {
        $this->container['nw_device_type'] = $nw_device_type;

        return $this;
    }

    /**
     * Gets overall_health
     *
     * @return string
     */
    public function getOverallHealth()
    {
        return $this->container['overall_health'];
    }

    /**
     * Sets overall_health
     *
     * @param string $overall_health overall_health
     *
     * @return $this
     */
    public function setOverallHealth($overall_health)
    {
        $this->container['overall_health'] = $overall_health;

        return $this;
    }

    /**
     * Gets memory_score
     *
     * @return string
     */
    public function getMemoryScore()
    {
        return $this->container['memory_score'];
    }

    /**
     * Sets memory_score
     *
     * @param string $memory_score memory_score
     *
     * @return $this
     */
    public function setMemoryScore($memory_score)
    {
        $this->container['memory_score'] = $memory_score;

        return $this;
    }

    /**
     * Gets cpu_score
     *
     * @return string
     */
    public function getCpuScore()
    {
        return $this->container['cpu_score'];
    }

    /**
     * Sets cpu_score
     *
     * @param string $cpu_score cpu_score
     *
     * @return $this
     */
    public function setCpuScore($cpu_score)
    {
        $this->container['cpu_score'] = $cpu_score;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


