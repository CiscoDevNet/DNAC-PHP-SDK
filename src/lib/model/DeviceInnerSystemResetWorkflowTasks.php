<?php
/**
 * DeviceInnerSystemResetWorkflowTasks
 *
 * PHP version 5
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Swagger
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.3.1
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace cisco\com\dnac\v1\api\client\model;

use \ArrayAccess;
use \cisco\com\dnac\v1\api\client\ObjectSerializer;

/**
 * DeviceInnerSystemResetWorkflowTasks Class Doc Comment
 *
 * @category Class
 * @package  cisco\com\dnac\v1\api\client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class DeviceInnerSystemResetWorkflowTasks implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Device_inner_systemResetWorkflow_tasks';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'curr_work_item_idx' => 'int',
        'end_time' => 'int',
        'name' => 'string',
        'start_time' => 'int',
        'state' => 'string',
        'task_seq_no' => 'int',
        'time_taken' => 'int',
        'type' => 'string',
        'work_item_list' => '\cisco\com\dnac\v1\api\client\model\DeviceInnerHistoryTaskInfoWorkItemList[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'curr_work_item_idx' => null,
        'end_time' => null,
        'name' => null,
        'start_time' => null,
        'state' => null,
        'task_seq_no' => null,
        'time_taken' => null,
        'type' => null,
        'work_item_list' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'curr_work_item_idx' => 'currWorkItemIdx',
        'end_time' => 'endTime',
        'name' => 'name',
        'start_time' => 'startTime',
        'state' => 'state',
        'task_seq_no' => 'taskSeqNo',
        'time_taken' => 'timeTaken',
        'type' => 'type',
        'work_item_list' => 'workItemList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'curr_work_item_idx' => 'setCurrWorkItemIdx',
        'end_time' => 'setEndTime',
        'name' => 'setName',
        'start_time' => 'setStartTime',
        'state' => 'setState',
        'task_seq_no' => 'setTaskSeqNo',
        'time_taken' => 'setTimeTaken',
        'type' => 'setType',
        'work_item_list' => 'setWorkItemList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'curr_work_item_idx' => 'getCurrWorkItemIdx',
        'end_time' => 'getEndTime',
        'name' => 'getName',
        'start_time' => 'getStartTime',
        'state' => 'getState',
        'task_seq_no' => 'getTaskSeqNo',
        'time_taken' => 'getTimeTaken',
        'type' => 'getType',
        'work_item_list' => 'getWorkItemList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['curr_work_item_idx'] = isset($data['curr_work_item_idx']) ? $data['curr_work_item_idx'] : null;
        $this->container['end_time'] = isset($data['end_time']) ? $data['end_time'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['start_time'] = isset($data['start_time']) ? $data['start_time'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['task_seq_no'] = isset($data['task_seq_no']) ? $data['task_seq_no'] : null;
        $this->container['time_taken'] = isset($data['time_taken']) ? $data['time_taken'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['work_item_list'] = isset($data['work_item_list']) ? $data['work_item_list'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {

        return true;
    }


    /**
     * Gets curr_work_item_idx
     *
     * @return int
     */
    public function getCurrWorkItemIdx()
    {
        return $this->container['curr_work_item_idx'];
    }

    /**
     * Sets curr_work_item_idx
     *
     * @param int $curr_work_item_idx curr_work_item_idx
     *
     * @return $this
     */
    public function setCurrWorkItemIdx($curr_work_item_idx)
    {
        $this->container['curr_work_item_idx'] = $curr_work_item_idx;

        return $this;
    }

    /**
     * Gets end_time
     *
     * @return int
     */
    public function getEndTime()
    {
        return $this->container['end_time'];
    }

    /**
     * Sets end_time
     *
     * @param int $end_time end_time
     *
     * @return $this
     */
    public function setEndTime($end_time)
    {
        $this->container['end_time'] = $end_time;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets start_time
     *
     * @return int
     */
    public function getStartTime()
    {
        return $this->container['start_time'];
    }

    /**
     * Sets start_time
     *
     * @param int $start_time start_time
     *
     * @return $this
     */
    public function setStartTime($start_time)
    {
        $this->container['start_time'] = $start_time;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets task_seq_no
     *
     * @return int
     */
    public function getTaskSeqNo()
    {
        return $this->container['task_seq_no'];
    }

    /**
     * Sets task_seq_no
     *
     * @param int $task_seq_no task_seq_no
     *
     * @return $this
     */
    public function setTaskSeqNo($task_seq_no)
    {
        $this->container['task_seq_no'] = $task_seq_no;

        return $this;
    }

    /**
     * Gets time_taken
     *
     * @return int
     */
    public function getTimeTaken()
    {
        return $this->container['time_taken'];
    }

    /**
     * Sets time_taken
     *
     * @param int $time_taken time_taken
     *
     * @return $this
     */
    public function setTimeTaken($time_taken)
    {
        $this->container['time_taken'] = $time_taken;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets work_item_list
     *
     * @return \cisco\com\dnac\v1\api\client\model\DeviceInnerHistoryTaskInfoWorkItemList[]
     */
    public function getWorkItemList()
    {
        return $this->container['work_item_list'];
    }

    /**
     * Sets work_item_list
     *
     * @param \cisco\com\dnac\v1\api\client\model\DeviceInnerHistoryTaskInfoWorkItemList[] $work_item_list work_item_list
     *
     * @return $this
     */
    public function setWorkItemList($work_item_list)
    {
        $this->container['work_item_list'] = $work_item_list;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


